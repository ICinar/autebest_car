# Makefile
#
# build ethernet sample application
#
# azuepke, 2015-10-09: initial

TOP = ../../../hypervisor

include $(TOP)/rules.mk
include $(TOP)/rules-$(FOOBAR_RULESET).mk
include $(TOP)/kernel/arch/$(ARCH)/$(SUBARCH)-$(FOOBAR_RULESET).mk

INCLUDES = -nostdinc -I$(TOP)/kernel/include -I$(TOP)/kernel/arch/$(ARCH)/include
INCLUDES += -I. -I$(LWIPARCHDIR) -I$(LWIPDIR)/src/include
CFLAGS += $(ARCH_USER_CFLAGS) \
          $(INCLUDES)

#CFLAGS += -Wno-unused-but-set-variable
#CFLAGS += -Wno-format
#CFLAGS += -Wno-unused-variable
#CFLAGS += -Wno-cast-qual
#CFLAGS += -Wno-declaration-after-statement
#CFLAGS += -Wno-shadow
#CFLAGS += -Wno-sign-compare
#CFLAGS += -Wno-attributes

MODS = main lighting ultrasonic distancesensor powertrain wheelsensor steering stm32f4xx_exti_bsp stm32f4xx_syscfg stm32f4xx_tim_bsp
OBJS = $(addprefix .,$(addsuffix .o,$(MODS))) .buildid.o
DEPS = $(addprefix .,$(addsuffix .d,$(MODS)))

# ARCH_USER_LDFLAGS defines the ELF architecture
LDFLAGS += $(ARCH_USER_LDFLAGS) -u __sys_sched_state -u __sys_error_state -u __sys_exception_state

LIBS = -L$(TOP)/libcmini -lcmini -L$(TOP)/libsys -lsys
ifeq ("$(NOLIBGCC)", "")
LIBS += -L$(TOP)/libgcc -lgcc
endif

ifeq ($(VLE),yes)
CRT0 = $(TOP)/libsys/.crt0_$(ARCH)_vle.o
else
CRT0 = $(TOP)/libsys/.crt0_$(ARCH).o
endif

ifeq ("$(DEBUG)", "no")
CFLAGS += -DNDEBUG
CFLAGS += -O2 -fomit-frame-pointer
else
CFLAGS += -g
endif

.PHONY: all dummy_reloc final_reloc clean distclean .FORCE

all: dummy_reloc
dummy_reloc: app.dummy.elf
final_reloc: app.elf app.map app.bin

app.dummy.elf: $(OBJS) .app.dummy.ld
	@echo "  LD    $@"
	$(Q)$(LD) $(LDFLAGS) -T.app.dummy.ld -o $@ $(CRT0) $(OBJS) $(LIBS)

app.elf: $(OBJS) .app.ld
	@echo "  LD    $@"
	$(Q)$(LD) $(LDFLAGS) -T.app.ld -o $@ $(CRT0) $(OBJS) $(LIBS)

app.map: app.elf
	@echo "  MAP   $@"
	$(Q)$(NM) -n $< > $@

app.bin: app.elf
	@echo "  BIN   $@"
	$(Q)$(OBJCOPY) -j .text -j .rodata -j .sdata2 -j .data -j .sdata -Obinary $< $@

# autogenerated files
buildid.c: $(filter-out .buildid.o, $(OBJS)) $(LDSCRIPT)
	@echo "  GEN   $@"
	$(Q)echo "/* buildid.c */" >$@
	$(Q)echo "/* GENERATED BY MAKEFILE -- DO NOT EDIT */" >>$@
	$(Q)echo "const char __buildid[] = \"$(BUILDID)\";" >>$@

clean:
	$(Q)rm -f $(OBJS) buildid.c app.elf app.dummy.elf app.bin app.map .app.ld .app.dummy.ld app.ld.h app.id.h

distclean: clean
	$(Q)rm -f $(DEPS)

# pull in dependencies
ifeq ("$(filter $(MAKECMDGOALS), clean distclean)", "")
-include $(DEPS)
endif
