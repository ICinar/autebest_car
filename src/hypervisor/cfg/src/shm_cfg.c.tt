<#@ template language="C#" hostSpecific="true" debug="true" inherits="ECCG.Data.Base" #>
<#@ ECCG Processor="ECCGDirectiveProcessor" #>
/* shm_cfg.c -- AUTOGENERATED -- DO NOT EDIT -- */
<#
	/* check if final_memory.xml exists */
	string mpu_arch = "";
	if (config.Select("/memory_layout/part").Count != 0) {
		mpu_arch = config.Select("/memory_layout")[0].GetAttribute("mpu_arch", "");
	}
#>


#include <shm_state.h>
#include <shm_defines.h>

/* SHM table */
const struct shm_cfg shm_cfg[<#= config.Select("/system/shm").Count #>] = {
<#
	foreach (XPathNavigator nav in config.Select("/system/shm"))
	{
		string shm_name = nav.GetAttribute("name", "");
#>
	/* SHM '<#=shm_name#>' */ {
<#
	if (mpu_arch != "")
	{
		foreach (XPathNavigator nav2 in config.Select("/memory_layout/shm[@name=\""+shm_name+"\"]"))
		{
			string text = nav2.GetAttribute("start", "");
			uint start = text.StartsWith("0x") ? Convert.ToUInt32(text.Substring(2), 16) : Convert.ToUInt32(text, 10);
			text = nav2.GetAttribute("size", "");
			uint size = text.StartsWith("0x") ? Convert.ToUInt32(text.Substring(2), 16) : Convert.ToUInt32(text, 10);

#>
		.base = <#= String.Format("0x{0:X8}", start) #>,
		.size = <#= String.Format("0x{0:X8}", size) #>,
<#

		}
	}
	else
	{
#>
		.base = 0,	/* dummy */
		.size = 0,	/* dummy */
<#
	}
#>
	},
<#
	}
#>
};

/* partition SHM access table */
const struct shm_access shm_access[<#= config.Select("/system/partition/shm_access").Count #>] = {
<#
	foreach (XPathNavigator partition in config.Select("/system/partition"))
	{
		int shm_access_id = 0;
		foreach (XPathNavigator shm_access in partition.Select("shm_access"))
		{
			String shm_name = shm_access.GetAttribute("shm", "");
#>
	/* partition '<#=partition.GetAttribute("name", "")#>' index <#=shm_access_id#> '<#=shm_name#>' */ {
		.shm_cfg = &shm_cfg[OS_SHM_<#=shm_name#>],
	},
<#
			shm_access_id++;
		}
		
	}
#>
};
