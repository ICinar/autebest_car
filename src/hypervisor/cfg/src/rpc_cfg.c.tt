<#@ template language="C#" hostSpecific="true" debug="true" inherits="ECCG.Data.Base" #>
<#@ ECCG Processor="ECCGDirectiveProcessor" #>
/* rpc_cfg.c -- AUTOGENERATED -- DO NOT EDIT -- */


#include <rpc_state.h>
#include <task_state.h>
#include <rpc_defines.h>

/* RPC table */
<#
	int num_rpcs = 0;
	foreach (XPathNavigator part in config.Select("/system/partition")) {
		string part_name = part.GetAttribute("name", "");
		{
#>
extern struct task task_dyn_part_<#= part_name #>[];
extern struct rpc rpc_dyn_part_<#= part_name #>[];
<#
		}
		num_rpcs += part.Select("./rpc").Count;
	}
#>

const struct rpc_cfg rpc_cfg[<#= num_rpcs #>] = {
<#
	int id = 0;

	foreach (XPathNavigator partition in config.Select("/system/partition"))
	{
		string part_name = partition.GetAttribute("name", "");

		foreach (XPathNavigator rpc in partition.Select("rpc"))
		{
			string name = rpc.GetAttribute("name", "");

			string target_part_name = rpc.GetAttribute("partition", "");
			if (target_part_name == "") {
				target_part_name = part_name;
			}
			string target_name = rpc.GetAttribute("invokable", "");

			string prio = rpc.GetAttribute("prio", "");
			if (prio == "") {
				prio = "0";
			}
#>
	/* <#=id#>: RPC '<#=name#>' partition '<#=part_name#>' */ {
		.task = &task_dyn_part_<#= target_part_name #>[OS_INVOKABLE_LOCAL_ID_<#=target_part_name#>_<#=target_name#>],
		.prio = <#= prio #>,
	},
<#
			id++;
		}
	}
#>
};
