<#@ template language="C#" hostSpecific="true" debug="true" inherits="ECCG.Data.Base" #>
<#@ ECCG Processor="ECCGDirectiveProcessor" #>
/* ipev_cfg.c -- AUTOGENERATED -- DO NOT EDIT -- */

#include <kernel.h>
#include <ipi_state.h>

/** cross-core IPI jobs (num_actions x (num_cpus-1) x num_cpus) */
<#
	int num_cpus = Convert.ToInt32(config.Select("/target")[0].GetAttribute("cpus", ""));
	int num_actions = Convert.ToInt32(config.Select("/system")[0].GetAttribute("ipi_actions", ""));

#>
const uint8_t num_ipi_actions __section_cfg = <#= num_actions #>;
<#
	for (int cpu = 0; cpu < num_cpus; cpu++) {
#>
struct ipi_action ipi_actions_core_<#= cpu #>[<#= num_actions*(num_cpus-1) #>] __section_bss_core(<#= cpu #>);
<#
	}
#>

/** per-core IPI state */
<#
	for (int cpu = 0; cpu < num_cpus; cpu++) {
#>
struct ipi_state ipi_state_core_<#= cpu #> __section_bss_core(<#= cpu #>);
<#
	}
#>

/** per-CPU IPI configuration */
const struct ipi_cfg ipi_cfg[<#= num_cpus #>] = {
<#
	for (int cpu = 0; cpu < num_cpus; cpu++) {
		int core_pos = 0;
#>
	/* CPU <#= cpu #> */ {
		.state = &ipi_state_core_<#= cpu #>,
		.actions = {
<#
		for (int cpu2 = 0; cpu2 < num_cpus; cpu2++) {
			if (cpu2 == cpu) {
#>
			NULL, /* no IPIs to self */
<#
			} else {
#>
			&ipi_actions_core_<#= cpu #>[<#= core_pos #>],
<#
				core_pos += num_actions;
			}
		}
#>
		},
	},
<#
	}
#>
};
