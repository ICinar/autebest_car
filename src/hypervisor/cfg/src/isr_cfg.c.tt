<#@ template language="C#" hostSpecific="true" debug="true" inherits="ECCG.Data.Base" #>
<#@ ECCG Processor="ECCGDirectiveProcessor" #>
/* isr_cfg.c -- AUTOGENERATED -- DO NOT EDIT -- */


#include <kernel.h>
#include <assert.h>
#include <isr_state.h>
#include <task_state.h>
#include <task_defines.h>
#include <isr_defines.h>

/** TODO: move to proper header*/
extern const struct task_cfg task_cfg[];

/* defines to make the ISR table more readable: */
/* argument unused */
#define ISR_ARG_UNUSED  0

<#
	int num_isrs = Convert.ToInt32(config.Select("/target")[0].GetAttribute("isrs", ""));
	string default_handler_name = config.Select("/target/kernel/defaultisr")[0].GetAttribute("name", "");
	string default_handler_entry = config.Select("/target/kernel/defaultisr")[0].GetAttribute("entry", "");
#>
/* default handler function: <#=default_handler_name#> */
#define ISR_DEFAULT_HANDLER  (void*)<#=default_handler_entry#>

/* ISR call table */
const struct isr_cfg isr_cfg[<#=num_isrs#>] = {
<#
	for(int current_vec = 0; current_vec < num_isrs; current_vec++)
	{
#>
	/* ISR <#=current_vec#> */ {
<#
		if(config.Select("/system/partition/isr[@vector=\""+current_vec+"\"]").Count != 0)
		{
			XPathNavigator nav = config.Select("/system/partition/isr[@vector=\""+current_vec+"\"]")[0];
			string isr_name = nav.GetAttribute("name","");
			string part_name = nav.SelectSingleNode("..").GetAttribute("name","");
#>
		.func = kernel_wake_isr_task,
		.arg0 = &task_cfg[OS_TASK_GLOBAL_ID_<#=part_name#>_<#=isr_name#>], /* user ISR */
<#
		}
		else if(config.Select("/target/kernel/isr[@vector=\""+current_vec+"\"]").Count != 0)
		{
			XPathNavigator nav = config.Select("/target/kernel/isr[@vector=\""+current_vec+"\"]")[0];
			string isr_name = nav.GetAttribute("name","");
			string func = nav.SelectSingleNode("invoke").GetAttribute("entry","");
			string arg0 = nav.SelectSingleNode("invoke").GetAttribute("arg","");
			if(String.IsNullOrEmpty(arg0))
			{
				arg0 = "ISR_ARG_UNUSED";
			}
#>
		.func = (void*)<#=func#>, /* <#=isr_name#> */
		.arg0 = (void*)<#=arg0#>,
<#
		}
		else
		{
#>
		.func = ISR_DEFAULT_HANDLER,
		.arg0 = (void*)<#=current_vec#>,
<#
		}
#>
	},
<#
	}
#>
};
