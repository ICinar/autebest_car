<#@ template language="C#" hostSpecific="true" debug="true" inherits="ECCG.Data.Base" #>
<#@ ECCG Processor="ECCGDirectiveProcessor" #>
/* vCanIf_cfg.h -- AUTOGENERATED -- DO NOT EDIT -- */
/*
 * Copyright 2015 easycore GmbH, 91058 Erlangen, Germany.
 * All rights exclusively reserved for easycore GmbH, unless expressly agreed
 * to otherwise.
 */

#if (!defined VCANIF_CFG_H)
#define VCANIF_CFG_H

<#
    string part_name  = config.LookupValues("OSEKPartition");

    List<XPathNavigator> vCanIf_Transmit_Entries =
    config.Select("/system/partition[@name=\""+part_name+"\"]/vCanIf/CanIf_Transmit");
    
    List<XPathNavigator> vCanIf_RxIndication_Entries =
    config.Select("/system/partition[@name=\""+part_name+"\"]/vCanIf/CanIf_RxIndication");

    List<XPathNavigator> vCanIf_TxConfirmation_Entries =
    config.Select("/system/partition[@name=\""+part_name+"\"]/vCanIf/CanIf_TxConfirmation");
    
    int CanTxPduId_max = 0;
    foreach (XPathNavigator CanIf_Transmit in vCanIf_Transmit_Entries)
    {
        string CanTxPduId = CanIf_Transmit.GetAttribute("CanTxPduId", "");
        try
        {
            int CanTxPduId_val = Int32.Parse(CanTxPduId);
            if (CanTxPduId_val > CanTxPduId_max)
            {
                CanTxPduId_max = CanTxPduId_val;
            }
        }
        catch (FormatException e)
        {
#>
#error "Attribute CanTxPduId must be configured for every vCanIf/CanIf_Transmit object as unsigned integer"
<#
        }
    }
    
    int CanTxConfirmPduId_max = 0;
    foreach (XPathNavigator CanIf_TxConfirmation in vCanIf_TxConfirmation_Entries)
    {
        string CanTxPduId = CanIf_TxConfirmation.GetAttribute("CanTxPduId", "");
        try
        {
            int CanTxPduId_val = Int32.Parse(CanTxPduId);
            if (CanTxPduId_val > CanTxConfirmPduId_max)
            {
                CanTxConfirmPduId_max = CanTxPduId_val;
            }
        }
        catch (FormatException e)
        {
#>
#error "Attribute CanTxPduId must be configured for every vCanIf/CanIf_TxConfirmation object as unsigned integer"
<#
        }
    }
#>
/*==================[inclusions]==============================================*/

/* Configuration types */
#include "vCanIf_Types.h"

/*==================[macros]==================================================*/

#define vCANIF_TRANSMIT_ENTRIES       (<#= CanTxPduId_max > 0 ? CanTxPduId_max + 1 : 0 #>)

/**
 * \brief How many clients for CanIf_RxIndication of module vCanIf where configured.
 */
#define vCANIF_RXINDICATION_ENTRIES   (<#= vCanIf_RxIndication_Entries.Count #>)

#define vCANIF_TXCONFIRMATION_ENTRIES (<#= CanTxConfirmPduId_max > 0 ? CanTxConfirmPduId_max + 1 : 0 #>)

/*==================[type definitions]========================================*/
/*==================[external function declarations]==========================*/
/*==================[internal function declarations]==========================*/
/*==================[external constants]======================================*/
/*==================[internal constants]======================================*/
/*==================[external data]===========================================*/

/* Configuration of vCanIf */
extern const CanIf_ConfigType vCanIf_Configuration;

/*==================[internal data]===========================================*/
#endif /* if (!defined VCANIF_CFG_H) */
/*==================[end of file]=============================================*/