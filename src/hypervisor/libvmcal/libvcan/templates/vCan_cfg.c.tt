<#@ template language="C#" hostSpecific="true" debug="true" inherits="ECCG.Data.Base" #>
<#@ ECCG Processor="ECCGDirectiveProcessor" #>
/* vCan_cfg.c -- AUTOGENERATED -- DO NOT EDIT -- */
/*
 * Copyright 2015 easycore GmbH, 91058 Erlangen, Germany.
 * All rights exclusively reserved for easycore GmbH, unless expressly agreed
 * to otherwise.
 */

/*==================[inclusions]==============================================*/

#include "vCan_cfg.h"
#include "app.id.h"

#if (defined FINAL_RELOC)
  #include "app.ld.h"
#endif

/*==================[macros]==================================================*/
/*==================[type definitions]========================================*/
/*==================[external function declarations]==========================*/
/*==================[internal function declarations]==========================*/
/*==================[external constants]======================================*/
/*==================[internal constants]======================================*/
<#
    string part_name = config.LookupValues("OSEKPartition");

    List<XPathNavigator> Can_Write_Entries =
    config.Select("/system/partition[@name=\""+part_name+"\"]/vcan/Can_Write");

    List<XPathNavigator> Can_RxISR_Clients =
    config.Select("/system/partition[@name=\""+part_name+"\"]/vcan/CAN_RX_ISR");

    List<XPathNavigator> CAN_TX_Confirmation_Clients =
    config.Select("/system/partition[@name=\""+part_name+"\"]/vcan/CAN_TX_Confirmation");
#>
/*==================[external data]===========================================*/

/*------------------[Clients of Can_Write]------------------------------------*/

<#
if (Can_Write_Entries.Count > 0)
{
#>
static Can_Write_Config vCan_Write_Entries[vCAN_WRITE_ENTRIES] = 
{
#if (defined FINAL_RELOC)
<#
    foreach (XPathNavigator CanWriteClient in Can_Write_Entries)
    {
        string ipev = CanWriteClient.GetAttribute("ipev", "");
        string shm  = CanWriteClient.GetAttribute("shm", "");
        string pduid_shm  = CanWriteClient.GetAttribute("pduid_shm", "");
#>
    {
     .ipev = CFG_IPEV_<#= ipev #>,
     .pdu = (Can_Serialized_PduType*) SHM_START_<#= shm #>,
     .pduid = (PduIdType*)SHM_START_<#= pduid_shm #>
    },
<#
    }
#>
#else
    {
      .ipev  = 0,
      .pdu   = 0,
      .pduid = 0
    }
#endif
};
<#
}
else
{
#>
/* No clients of Can_Write, so dummy entry for the compiler */
static Can_Write_Config vCan_Write_Entries[1] =
{
    {
      .ipev  = 0,
      .pdu   = 0,
      .pduid = 0
    }
};
<#
}
#>

/*------------------[Clients of CAN_RX_ISR]-----------------------------------*/

<#
if (Can_RxISR_Clients.Count > 0)
{
#>
static Can_RX_ISR_Config vCan_RxISR_Entries[vCAN_RXISR_ENTRIES] =
{
#if (defined FINAL_RELOC)
<#
    foreach (XPathNavigator CAN_RX_ISR in Can_RxISR_Clients)
    {
        string shm  = CAN_RX_ISR.GetAttribute("shm", "");
#>
    { .pdu = (Can_Serialized_PduType*) SHM_START_<#= shm #> },
<#
    }
#>
#else
    { .pdu   = 0 }
#endif
};
<#
}
else
{
#>
/* No clients of CAN_RX_ISR, so dummy entry for the compiler */
static Can_RX_ISR_Config vCan_RxISR_Entries[1] = 
{
    { .pdu   = 0 }
};
<#
}
#>


/*------------------[vCAN Configuration]--------------------------------------*/

const Can_ConfigType vCan_Configuration =
{
    .vCan_Write_Entries_Count = vCAN_WRITE_ENTRIES,
    .vCan_Write_Entries       = vCan_Write_Entries,
    .vCan_RxISR_Entries_Count = vCAN_RXISR_ENTRIES,
    .vCan_RxISR_Entries       = vCan_RxISR_Entries,
<#
    if (CAN_TX_Confirmation_Clients.Count > 0)
    {
        string shm = CAN_TX_Confirmation_Clients[0].GetAttribute("shm", "");
#>
#if (defined FINAL_RELOC)
    .vCanTx_Confirmation_shm  = (PduIdType *) (SHM_START_<#= shm #>)
#else
    .vCanTx_Confirmation_shm  = (PduIdType *) 0
#endif
<#
    }
    else
    {
#>
    .vCanTx_Confirmation_shm  = (PduIdType *) 0
<#
    }
#>
};

/*==================[internal data]===========================================*/
/*==================[external function definitions]===========================*/
/*==================[internal function definitions]===========================*/
/*==================[end of file]=============================================*/
