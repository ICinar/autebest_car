# Makefile
#
# Kernel Makefile
#
# azuepke, 2013-03-22: initial
# azuepke, 2013-04-06: factored out top level Makefile
# azuepke, 2013-11-25: initial MPU version

TOP = ..

include ../rules.mk
include ../rules-$(FOOBAR_RULESET).mk
include arch/$(ARCH)/$(SUBARCH)-$(FOOBAR_RULESET).mk

vpath %.c arch/$(ARCH)/src src
vpath %.S arch/$(ARCH)/src src

INCLUDES += $(NOSDTINC) -Iinclude -Iarch/$(ARCH)/include
CFLAGS += -D__KERNEL \
          $(INCLUDES) \
          $(ARCH_CFLAGS)
AFLAGS += $(INCLUDES) \
          $(ARCH_AFLAGS)


MODS = $(ARCH_MODS) main syscalls \
       task part sched event kldd counter alarm schedtab \
       wq system_timer shm hm rpc \
       printf

LDFLAGS += $(ARCH_LDFLAGS)

ifeq ("$(DEBUG)", "no")
CFLAGS += -DNDEBUG $(ARCH_CFLAGS_NDEBUG)
AFLAGS += -DNDEBUG
else
CFLAGS += $(ARCH_CFLAGS_DEBUG) -DVERBOSE
AFLAGS +=
endif

ifneq ("$(SMP)", "no")
CFLAGS += -DSMP
AFLAGS += -DSMP
MODS += ipi $(ARCH_MODS_SMP)
else
CFLAGS +=
AFLAGS +=
endif

OBJS = $(addprefix .,$(addsuffix .o,$(MODS))) .buildid.o
DEPS = $(addprefix .,$(addsuffix .d,$(MODS)))

.PHONY: all clean distclean .FORCE

all: kernel.o

kernel.o: $(OBJS)
	@echo "  LD    $@"
	$(Q)$(LD) $(LDFLAGS) -r -o $@ $^

# autogenerated files
buildid.c: $(filter-out .buildid.o, $(OBJS))
	@echo "  GEN   $@"
	$(Q)echo "/* buildid.c */" >$@
	$(Q)echo "/* GENERATED BY MAKEFILE -- DO NOT EDIT */" >>$@
	$(Q)echo "const char kernel_buildid[] = \"$(BUILDID)\";" >>$@

clean:
	$(Q)rm -f $(OBJS) buildid.c kernel.o

distclean: clean
	$(Q)rm -f $(DEPS)

# pull in dependencies
ifeq ("$(filter $(MAKECMDGOALS), clean distclean)", "")
-include $(DEPS)
endif
